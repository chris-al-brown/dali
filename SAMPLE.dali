% Comment
% This is a comment

% Declaration
var: true

% Primitives

% Boolean
var: true
var: false

% Color
var: #efefef
var: #000000
var: #0000FF

% Number
var: 1.0
var: 0
var: -0.4

% String (future)
var: "This is a string"

% Nil
var: nil

% Closures

% Declaration
var: @(x, y, z) { x + y + z }

% Usage
var: closure(1.0, 2.0)

% Operators

% Addition
third: first + second

% Subtraction
third: first - second

% Multiplication
third: first * second

% Division
third: first / second

% Negation
third: -first

% Equality
first = second

% Less than
first < second

% Greater than
first > second

% Negation
!(first = second)

% And
first & second

% Or
first | second | third

% Grouping
value: ((true & true) | false)

% Standard Library

% Mix
mix(true, false, range(0, 1, 1 / 1000)) 

% Print
print(var)
print(true, false)
print(1.0)

% Range
range(0.0, 1.0, 0.1)

% Random
random(#EFEFEF, #FFFFFF, #C0C0C0)
random(true, false)

% TODO: Declaration (future)
% function: @{ (first, second) | first + second }

% Concatenate (future)
% var: {x, y, z}

% Slices (future)
% var[1, 2]    % = (y, z)
% var[0]       % = x
